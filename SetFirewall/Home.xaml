<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace.SetFirewall"
    xmlns:Domain="clr-namespace:SetFirewall.Domain" xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
    x:Class="SetFirewall.Home"
    mc:Ignorable="d"
    d:DesignHeight="500"
    d:DesignWidth="1200" Loaded="ucMain_Loaded">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
                <!-- throw in some extra colour for our floating action button -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Green.Named.Primary.xaml"/>

                <!-- primary color -->
                <ResourceDictionary>
                    <!-- include your primary palette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Indigo.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <!--
                            include three hues from the primary palette (and the associated forecolours).
                            Do not rename, keep in sequence; light to dark.
                        -->
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}"/>
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}"/>
                </ResourceDictionary>

                <!-- secondary colour -->
                <ResourceDictionary>
                    <!-- include your secondary pallette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Yellow.xaml" />
                    </ResourceDictionary.MergedDictionaries>

                    <!-- include a single secondary accent color (and the associated forecolour) -->
                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource Accent200}"/>
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent200Foreground}"/>
                </ResourceDictionary>

                <!-- Include the Dragablz Material Design style -->
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!-- tell Dragablz tab control to use the Material Design theme -->
            <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.DataContext>
        <Domain:DialogsViewModel/>
    </UserControl.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="110"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Margin="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Image
                Source="/Images/System_Security_Firewall_ON_Icon_256.png"
                Stretch="Uniform"
                Width="80"
                Height="80"/>

            <StackPanel
                Grid.Column="1"
                Margin="24 0 0 0"
                VerticalAlignment="Center">
                <TextBlock
                    Style="{StaticResource MaterialDesignHeadline4TextBlock}"
                    TextWrapping="Wrap"
                    FontFamily="Fonts/#Dosis"
                    FontWeight="Bold"
                    Text="Amano 방화벽 제어 프로그램"/>
                <StackPanel Orientation="Horizontal">
                    <ToggleButton Margin="5,0,0,0" x:Name="togUseFirewall" Grid.Column="0" Grid.ColumnSpan="5"   
                                  Width="auto" Height="40" Cursor="Hand"
                                  IsChecked="False" HorizontalAlignment="Left" Unchecked="togUseFirewall_Unchecked" Checked="togUseFirewall_Checked">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}" 
                                   BasedOn="{StaticResource MaterialDesignSwitchAccentToggleButton}">

                                <!--<Setter Property="Content" Value="Hide" />-->

                                <!--<Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        -->
                                <!--<Setter TargetName="txtUseFirewall" Property="Test" Value="test"/>-->
                                <!--<Setter Property="{Binding ElementName=txtUseFirewall, Path=Content}" Value="Test"/>-->
                                <!--
                                    </Trigger>
                                </Style.Triggers>-->
                            </Style>
                        </ToggleButton.Style>

                        <materialDesign:ToggleButtonAssist.OnContent>
                            <materialDesign:PackIcon Kind="Pin" />
                        </materialDesign:ToggleButtonAssist.OnContent>

                        <materialDesign:PackIcon Kind="Pin" RenderTransformOrigin=".5,.5">
                            <materialDesign:PackIcon.RenderTransform>
                                <RotateTransform Angle="45" />
                            </materialDesign:PackIcon.RenderTransform>
                        </materialDesign:PackIcon>

                    </ToggleButton>
                    <TextBlock x:Name="txtUseFirewall" Grid.Column="1" Grid.ColumnSpan="2"  
                               FontFamily="Fonts/#Dosis" FontSize="17" 
                               FontWeight="Bold" VerticalAlignment="Center"
                               HorizontalAlignment="Left" Cursor="Hand"
                               Margin="3,0,0,0" PreviewMouseDown="txtUseFirewall_PreviewMouseDown">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="방화벽 설정"/>
                                <Setter Property="Foreground" Value="ForestGreen"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=togUseFirewall}" Value="False">
                                        <Setter Property="Foreground" Value="#FC6586"/>
                                        <Setter Property="Text" Value="방화벽 해제"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <!--<Button
                    Style="{StaticResource MaterialDesignFlatButton}"
                    Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                    CommandParameter="{x:Static Dock.Left}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Binoculars"/>
                        <TextBlock Margin="8 0 0 0" Text="EXPLORE"/>
                    </StackPanel>
                </Button>-->
            </StackPanel>
        </Grid>
        <Button x:Name="btnAdd" Height="28" Width="52"
                ToolTip="방화벽 Rule 등록"
                Margin="10 -10 0 0" HorizontalAlignment="Left" 
                FontFamily="Fonts/#Dosis" FontWeight="Bold" PreviewMouseDown="btnAdd_PreviewMouseDown">
            <materialDesign:PackIcon Kind="DatabaseAdd" Width="42" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Button>
        <Button x:Name="btnRemove" Height="28" Width="52"
                ToolTip="방화벽 Rule 삭제"
                Margin="70 -10 0 0" HorizontalAlignment="Left" 
                FontFamily="Fonts/#Dosis" FontWeight="Bold" Cursor="Hand" PreviewMouseDown="btnRemove_PreviewMouseDown">
            <Button.CommandParameter>
                <system:Boolean>True</system:Boolean>
            </Button.CommandParameter>
            <Button.DataContext>
                <Domain:DialogsViewModel/>
            </Button.DataContext>
            <!--Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"-->
            <!--<Button.CommandParameter>
                                        <system:DateTime>1966-JUL-30</system:DateTime>
                                    </Button.CommandParameter>-->
            <materialDesign:PackIcon Kind="DatabaseMinus" Width="42" Height="24"  
                                                             HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Button>
        <Button x:Name="btnStart" Height="28" Width="52"
                Margin="10 60 0 0" HorizontalAlignment="Left" 
                ToolTip="방화벽 Rule 사용"
                FontFamily="Fonts/#Dosis" FontWeight="Bold" PreviewMouseDown="btnStart_PreviewMouseDown">
            <materialDesign:PackIcon Kind="Fire" Width="42" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Button>
        <Button x:Name="btnStop" Height="28" Width="52"
                Margin="70 60 0 0" HorizontalAlignment="Left" 
                ToolTip="방화벽 Rule 중지"
                FontFamily="Fonts/#Dosis" FontWeight="Bold" PreviewMouseDown="btnStop_PreviewMouseDown">
            <materialDesign:PackIcon Kind="FireOff" Width="42" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Button>
        <materialDesign:PopupBox
            Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Margin="0, 0, 12, 0"
            Grid.Row="0" PlacementMode="BottomAndAlignCentres" Cursor="Hand">
            <StackPanel>
                <Button
                    ToolTip="방화벽 설정 열기"
                    Click="OpenFwDetailButton_OnClick"
                    Content="{materialDesign:PackIcon Kind=FireHydrant, Size=20}"/>
                <Button
                    ToolTip="김성주 GitHub"
                    Click="GitHubButton_OnClick"
                    Content="{materialDesign:PackIcon Kind=Github, Size=20}"/>

                <!--<Button
                    ToolTip="Twitter"
                    Click="TwitterButton_OnClick"
                    Background="{DynamicResource PrimaryHueMidBrush}"
                    Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                    Content="{materialDesign:PackIcon Kind=Twitter, Size=20}"/>-->

                <Button
                    ToolTip="Chat:Material Design"
                    Click="ChatButton_OnClick"
                    Content="{materialDesign:PackIcon Kind=Message, Size=20}">
                    <!-- mix up the colours by bringing in a named palette (see merged dictionaries at top) -->
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource GreenPrimary500}"/>
                    </Button.Background>

                    <Button.Foreground>
                        <SolidColorBrush Color="{StaticResource GreenPrimary500Foreground}"/>
                    </Button.Foreground>
                </Button>

                <Button
                    ToolTip="Send Email to ssallem"
                    Click="EmailButton_OnClick"
                    Background="{DynamicResource SecondaryHueMidBrush}"
                    Foreground="{DynamicResource SecondaryHueMidForegroundBrush}"
                    Content="{materialDesign:PackIcon Kind=Email, Size=20}"/>

                <!--<Button
                    ToolTip="Feel like you want to make a donation?  It would be gratefully received.  Click the button to donate via Pledgie." 
                    Click="DonateButton_OnClick"
                    Content="{materialDesign:PackIcon Kind=Gift, Size=20}">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource GreenPrimary200}"/>
                    </Button.Background>

                    <Button.Foreground>
                        <SolidColorBrush Color="{StaticResource GreenPrimary200Foreground}"/>
                    </Button.Foreground>
                </Button>-->
            </StackPanel>
        </materialDesign:PopupBox>

        <ScrollViewer
            Grid.Row="1"
            HorizontalScrollBarVisibility="Disabled"
            VerticalScrollBarVisibility="Disabled"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Margin="10 0 0 10">
            <Grid Margin="0, 0, 10, 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <dragablz:TabablzControl x:Name="tabBounds" Grid.Row="1" Grid.RowSpan="2">
                    <dragablz:TabablzControl.InterTabController>
                        <dragablz:InterTabController />
                    </dragablz:TabablzControl.InterTabController>
                    <!-- In Bound 시작 -->
                    <TabItem>
                        <TabItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Foreground="White" Kind="ArchiveArrowDownOutline" Height="24" Width="32" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                <TextBlock Foreground="White" FontFamily="Fonts/#Dosis" FontSize="18" FontWeight="Bold"
                                           Style="{StaticResource MaterialDesignSubtitle1TextBlock}">In Bound</TextBlock>
                            </StackPanel>
                        </TabItem.Header>

                        <!--카드 1 시작-->
                        <materialDesign:Card  Width="Auto" Margin="10 10 10 10" Height="Auto">
                            <DataGrid x:Name="dataInbound" ItemsSource="{Binding Items1}" CanUserAddRows="False" AutoGenerateColumns="False" 
                                    HeadersVisibility="All" SelectionMode="Extended" CanUserDeleteRows="False" 
                                    Style="{StaticResource MaterialDesignDataGrid}"
                                    GridLinesVisibility="All">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding RuleName}" Header="이름" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" IsReadOnly="True" Width="200" />
                                    <materialDesign:DataGridTextColumn Binding="{Binding RuleProgram}" Header="프로그램" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="280"/>
                                    <materialDesign:DataGridTextColumn Binding="{Binding Protocol}" Header="프로토콜" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True"  Width="100"/>
                                    <materialDesign:DataGridTextColumn Binding="{Binding LocalPort}" Header="로컬 포트" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True"  Width="120"/>
                                    <materialDesign:DataGridTextColumn Binding="{Binding RemotePort}" Header="원격 포트" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="120"/>
                                    <materialDesign:DataGridTextColumn Header="사용" Binding="{Binding EnableName}" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="100">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEnabled}" Value="true">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="/Images/Apply_True.png" Stretch="Uniform"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsEnabled}" Value="false">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="/Images/Apply_False.png" Stretch="Uniform"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </materialDesign:DataGridTextColumn>
                                    <materialDesign:DataGridTextColumn Binding="{Binding ActionName}" Header="작업" 
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="100">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ActionName}" Value="허용">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="/Images/Rule_Allow.png" Stretch="Uniform"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ActionName}" Value="차단">
                                                        <Setter Property="Text" Value=""/>
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="/Images/Rule_Block.png" Stretch="Uniform"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </materialDesign:DataGridTextColumn>
                                    <materialDesign:DataGridTextColumn Binding="{Binding Direction}" Visibility="Hidden" Header="IN/OUT" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="100"/>
                                </DataGrid.Columns>
                                <!--<DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="true">
                                                <Setter Property="Foreground" Value="GreenYellow"/>
                                            </DataTrigger>                                            
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>-->
                            </DataGrid>
                        </materialDesign:Card>
                    </TabItem>
                    <!-- Out Bound 시작 -->
                    <TabItem>
                        <TabItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Foreground="White" Kind="ArchiveArrowUpOutline" Height="24" Width="32" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                <TextBlock Foreground="White" FontFamily="Fonts/#Dosis" FontSize="18"  FontWeight="Bold"
                                           Style="{StaticResource MaterialDesignSubtitle1TextBlock}">Out Bound</TextBlock>
                            </StackPanel>
                        </TabItem.Header>
                        <!--카드2 시작-->
                        <materialDesign:Card  Width="Auto" Margin="10 10 10 10" Height="Auto">
                            <DataGrid x:Name="dataOutbound" ItemsSource="{Binding Items1}" CanUserAddRows="False" AutoGenerateColumns="False" 
                                        HeadersVisibility="All" SelectionMode="Extended" CanUserDeleteRows="False" 
                                        Style="{StaticResource MaterialDesignDataGrid}"
                                        GridLinesVisibility="All">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding RuleName}" Header="이름" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" IsReadOnly="True" Width="200" />
                                    <materialDesign:DataGridTextColumn Binding="{Binding RuleProgram}" Header="프로그램" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="280"/>
                                    <materialDesign:DataGridTextColumn Binding="{Binding Protocol}" Header="프로토콜" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True"  Width="100"/>
                                    <materialDesign:DataGridTextColumn Binding="{Binding LocalPort}" Header="로컬 포트" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True"  Width="120"/>
                                    <materialDesign:DataGridTextColumn Binding="{Binding RemotePort}" Header="원격 포트" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="120"/>
                                    <materialDesign:DataGridTextColumn Header="사용" Binding="{Binding EnableName}" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="100">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEnabled}" Value="true">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="/Images/Apply_True.png" Stretch="Uniform"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsEnabled}" Value="false">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="/Images/Apply_False.png" Stretch="Uniform"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </materialDesign:DataGridTextColumn>
                                    <materialDesign:DataGridTextColumn Binding="{Binding ActionName}" Header="작업" 
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="100">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ActionName}" Value="허용">
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="/Images/Rule_Allow.png" Stretch="Uniform"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ActionName}" Value="차단">
                                                        <Setter Property="Text" Value=""/>
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="/Images/Rule_Block.png" Stretch="Uniform"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </materialDesign:DataGridTextColumn>
                                    <materialDesign:DataGridTextColumn Binding="{Binding Direction}" Visibility="Hidden" Header="IN/OUT" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True" Width="100"/>
                                </DataGrid.Columns>
                                <!--<DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="true">
                                                <Setter Property="Foreground" Value="GreenYellow"/>
                                            </DataTrigger>                                            
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>-->
                            </DataGrid>
                        </materialDesign:Card>
                    </TabItem>
                </dragablz:TabablzControl>
                <!--<TextBlock Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="20, 0, 0, 0"
                           TextWrapping="Wrap" FontFamily="Fonts/#Dosis" FontWeight="Bold" Text="Inbound"/>-->

            </Grid>
        </ScrollViewer>

    </Grid>
</UserControl>
