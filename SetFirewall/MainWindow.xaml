<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:domain="clr-namespace:SetFirewall.Domain"
        xmlns:local="clr-namespace:SetFirewall" x:Class="SetFirewall.MainWindow"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Firewall Control System"
        AutomationProperties.Name="{Binding Title, RelativeSource={RelativeSource Self}}"
        Height="880"
        Width="1200"
        d:DataContext="{d:DesignInstance {x:Type domain:MainWindowViewModel}}"
        Icon="/Firewall.ico">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.Style>
        <StaticResource ResourceKey="MaterialDesignWindow"/>
    </Window.Style>
    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy"/>
    </Window.CommandBindings>

    <materialDesign:DialogHost Identifier="RootDialog" DialogTheme="Inherit"
        SnackbarMessageQueue="{Binding MessageQueue, ElementName=MainSnackbar}">

        <materialDesign:DrawerHost
            IsLeftDrawerOpen="{Binding IsChecked, ElementName=MenuToggleButton}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton 
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                        DockPanel.Dock="Top"
                        HorizontalAlignment="Right" 
                        Margin="16"
                        IsChecked="{Binding IsChecked, ElementName=MenuToggleButton, Mode=TwoWay}"/>

                    <TextBox 
                        x:Name="DemoItemsSearchBox"
                        Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}"
                        DockPanel.Dock="Top"
                        Margin="16, 4"
                        Width="200"
                        materialDesign:HintAssist.Hint="Search"
                        materialDesign:HintAssist.IsFloating="True"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                        materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                        materialDesign:TextFieldAssist.TextFieldCornerRadius="4"/>

                    <!--MaterialDesignNavigationPrimaryListBox-->
                    <ListBox 
                        x:Name="DemoItemsListBox" 
                        Margin="0 16 0 16"
                        SelectedIndex="{Binding SelectedIndex}"
                        SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding DemoItems}"
                        PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                        AutomationProperties.Name="DemoPagesListBox"
                        >
                        <ListBox.Resources>
                            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                        </ListBox.Resources>
                        <ListBox.Style>
                            <StaticResource ResourceKey="MaterialDesignChoiceChipPrimaryListBox"/>
                        </ListBox.Style>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="domain:DemoItem">
                                <TextBlock Text="{Binding Name}" Margin="24 4 0 4" AutomationProperties.AutomationId="DemoItemPage"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <DockPanel>
                <materialDesign:ColorZone
                    Padding="16"
                    materialDesign:ShadowAssist.ShadowDepth="Depth4"
                    Mode="PrimaryMid"
                    DockPanel.Dock="Top" Height="59">
                    <DockPanel Margin="0,-9,0,-3">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                IsChecked="False"
                                Click="MenuToggleButton_OnClick"
                                AutomationProperties.Name="HamburgerToggleButton"/>

                            <Button
                                Margin="24,0,0,0"
                                ToolTip="Previous Item"
                                Command="{Binding MovePrevCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowLeft, Size=24}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}"
                                materialDesign:RippleAssist.Feedback="{Binding Foreground, Converter={StaticResource BrushRoundConverter}, RelativeSource={RelativeSource Self}}"/>

                            <Button 
                                Margin="16,0,0,0"
                                ToolTip="Next Item"
                                Command="{Binding MoveNextCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowRight, Size=24}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}"
                                materialDesign:RippleAssist.Feedback="{Binding Foreground, Converter={StaticResource BrushRoundConverter}, RelativeSource={RelativeSource Self}}"/>

                            <Button
                                Margin="16,0,0,0"
                                ToolTip="Home"
                                Command="{Binding HomeCommand}"
                                Content="{materialDesign:PackIcon Kind=Home, Size=24}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}}"
                                materialDesign:RippleAssist.Feedback="{Binding Foreground, Converter={StaticResource BrushRoundConverter}, RelativeSource={RelativeSource Self}}"/>
                        </StackPanel>

                        <materialDesign:PopupBox
                            DockPanel.Dock="Right"
                            PlacementMode="BottomAndAlignRightEdges"
                            StaysOpen="False">

                            <StackPanel>
                                <Grid Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        Text="Light"
                                        Margin="0 0 10 0"/>
                                    <ToggleButton
                                        x:Name="DarkModeToggleButton"
                                        Click="MenuDarkModeButton_Click"
                                        Grid.Column="1"/>
                                    <TextBlock
                                        Text="Dark"
                                        Margin="10 0 0 0"
                                        Grid.Column="2"/>
                                    <TextBlock
                                        Text="Enabled"
                                        Margin="0 10 10 0"
                                        Grid.Row="1"/>
                                    <ToggleButton
                                        x:Name="ControlsEnabledToggleButton"
                                        Margin="0 10 0 0"
                                        IsChecked="{Binding ControlsEnabled}"
                                        Grid.Row="1"
                                        Grid.Column="1"/>
                                </Grid>

                                <Separator/>

                                <Button
                                    Content="Hello World"
                                    Click="MenuPopupButton_OnClick"/>

                                <Button
                                    Content="Nice Popup"
                                    Click="MenuPopupButton_OnClick"/>

                                <Button
                                    Content="Can't Touch This"
                                    IsEnabled="False"/>

                                <Separator/>

                                <Button
                                    Content="Goodbye"
                                    Click="MenuPopupButton_OnClick"/>
                            </StackPanel>
                        </materialDesign:PopupBox>

                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   AutomationProperties.Name="Setting Firewall"
                                   FontFamily="Fonts/#Dosis"
                                   FontWeight="Bold"
                                   FontSize="30" Height="40"
                                   Text="Firewall Control System"/>
                    </DockPanel>
                </materialDesign:ColorZone>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--<domain:DocumentationLinks DataContext="{Binding SelectedItem}"/>-->

                    <ScrollViewer
                        x:Name="MainScrollViewer"
                        Grid.Row="1"
                        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                        HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}"
                        VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}" >
                        <local:Home Height="742"/>
                    </ScrollViewer>

                    <materialDesign:Snackbar
                        x:Name="MainSnackbar"
                        MessageQueue="{materialDesign:MessageQueue}"
                        Grid.Row="1"/>
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
